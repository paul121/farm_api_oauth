<?php

/**
 * @file
 * Farm API OAuth Module.
 */

/**
 * Implements oauth2_server_default_scope().
 */
function oauth2_server_test_oauth2_server_default_scope($server) {
  // Grant "farm_restws_access" by default.
  if ($server->name == 'farm_oauth') {
    return array('farm_restws_access');
  }
}

/**
 * Implements hook_enable().
 */
function farm_api_oauth_enable(){
  // Set variables for restws_oauth2_server configuration.
  $server_name = 'farmos_oauth';
  variable_set('restws_oauth2_server_name', $server_name);
  $scope_name = 'farmos_restws_access';
  variable_set('restws_oauth2_server_scope', $scope_name);

  // Create an OAuth2 Server.
  $server = entity_create('oauth2_server', array());
  $server->name = $server_name;
  $server->label = 'Farm OAuth Server';
  $server->settings = array(
    'default_scope' => $scope_name,
    'enforce_state' => TRUE,
    'allow_implicit' => TRUE,
    'use_openid_connect' => FALSE,
    'use_crypto_tokens' => FALSE,
    'store_encrypted_token_string' => FALSE,
    'require_exact_redirect_uri' => TRUE,
    'grant_types' => array(
      'authorization_code' => 'authorization_code',
      'client_credentials' => 'client_credentials',
      //'urn:ietf:params:oauth:grant-type:jwt-bearer' => 'urn:ietf:params:oauth:grant-type:jwt-bearer',
      'refresh_token' => 'refresh_token',
      'password' => 'password',
    ),
    'always_issue_new_refresh_token' => TRUE,
    'access_lifetime' => 3600,
    'id_lifetime' => 3600,
    'refresh_token_lifetime' => 1209600,
  );
  $server->save();

  // Create an OAuth2 Scope for restws access.
  $scope = entity_create('oauth2_server_scope', array());
  $scope->server = $server->name;
  $scope->name = $scope_name;
  $scope->description = 'Access farmOS restws endpoints.';
  $scope->save();



  // Create an OAuth2 Client for general Farm API access.
  $client = entity_create('oauth2_server_client', array());
  $client->server = $server->name;
  $client->label = 'farmOS API';
  $client->client_key = 'farmos_api_client';
  $client->client_secret = oauth2_server_hash_client_secret('client_secret');
  //$client->public_key = $this->public_key;
  // The module supports entering multiple redirect uris separated by a
  // newline. Both a dummy and the real uri are specified to confirm that
  // validation passes.
  $client->redirect_uri = url('authorized', array('absolute' => TRUE));
  $client->automatic_authorization = TRUE;
  $client->save();
}

/**
 * Implements hook_disable().
 */
function farm_api_oauth_disable(){
  // Assume that the user does not change the OAuth2 Server or Scope
  // because they are using this module with farmOS. Otherwise this could
  // potentially delete other configured OAuth2 Servers and Scopes.
  $server_name = variable_get('restws_oauth2_server_name');
  $scope_name = variable_get('restws_oauth2_server_scope');

  // Delete OAuth2 Entities.
  entity_delete('oauth2_server_client', 'farmos_api_client');
  entity_delete('oauth2_server_scope', $scope_name);
  entity_delete('oauth2_server', $server_name);
}
